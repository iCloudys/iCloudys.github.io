<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[用Objective-C写一个简单的爬虫(一)]]></title>
    <url>%2F2018%2F04%2F03%2F%E7%94%A8%60Objective-C%60%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%88%AC%E8%99%AB(%E4%B8%80)%2F</url>
    <content type="text"><![CDATA[你是不是想写个爬虫来抓取点东西,但是你又不会Python或者别的语言，那么你就得感谢你自己能来到这里。接下来就交给你如何用Objective-C写一个爬虫。 什么？Objective-C也能写爬虫？不都是Python才可以的么？那么我告诉你基本上大部分语言都是可以写爬虫的，只是Python用来写爬虫比较方便，他有海量的三方库可以让开发者调用而已。而别的语言基本上就是靠自己苦逼的撸了。 那么用Objective-C写爬虫有什么用？靠iPhone来爬数据么？这里博主只是写个简单的爬虫而已，并不指望用此来专门抓取数据，你觉得让手机去爬数据能爬多少啊。本教程会兼容Mac软件开发，你可以用此技术开发mac爬虫工具。 – 废话少说，让我们来开始吧！ 必备工具： 链接网络的Mac,黑苹果也可以 浏览器，推荐用Google Chrome Xcode开发工具 必备技能： 熟悉Objective-C 能阅读HTML,能认识基本的标签即可 正则表达式,大概浏览一下就行,这里在遇到的时候博主会简单介绍一下 本篇目标： 抓取回车桌面上的图片 附图: – 一、分析网站用浏览器打开回车桌面,并且按下 option + command + i打开开发者工具。如图:确保右上方是选中的Elements选项，下面HTML就是网页的源代码。鼠标在HTML上面移动的时候左侧页面会有相应的模块提示，我们以次点开标签，就能找到想要的图片地址: 粘一段代码: 123456&lt;img a_width="576" a_height="360" src="https://up.enterdesk.com/edpic_360_360/cf/e1/8f/cfe18f5a7e0a42355784bb992f313853.jpg" alt="清明节气" title="清明节气" style="height: 185px; width: 296px;"&gt; 上段代码中src就是网页中的图片地址，我们接下来就是把这个src的值提取出来。 – 二、撸代码 上面我们分析了网页源码，接下来我们已经知道了大致流程： 获取网页源码 正则提取url 好! 让我们来创建一个Objective-C项目，这里我们主要是来介绍如何写爬虫，至于Objective-C项目自己创建即可。第一步博主这里在主控制器上面添加一个UITextView，背景色为黑色；Tint 颜色为绿色，(这样的颜色看起来比较高大上一点)；不可编辑；打开连接功能；并且连接到所在的控制器。如图: 第二步创建Spider类和SpiderOption类。Spider是爬虫工具类;SpiderOption是参数类，在爬数据过程中所需要的参数都由SpiderOption传递给Spider SpiderOption.h 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#import &lt;Foundation/Foundation.h&gt;typedef void(^SpiderProgressHander)(NSString* url);@interface SpiderOption : NSObject/** 目标网站 */@property (nonatomic, copy) NSString* website;/** 抓取数据正则表达式 */@property (nonatomic, copy) NSString* pattern;/** 抓取数据回调 */@property (nonatomic, copy) SpiderProgressHander progress;@end``` `Spider.h` ```objc #import &lt;Foundation/Foundation.h&gt;#import "SpiderOption.h"@interface Spider : NSObject/** 参数类 */@property (nonatomic, strong, readonly) SpiderOption* option;/** 初始化方法 @param option 参数类 @return self */- (instancetype)initWithOption:(SpiderOption*)option;/** 开始抓取 */- (void)start;@end Spider.m 1234567891011121314151617#import "Spider.h"@implementation Spider- (instancetype)initWithOption:(SpiderOption *)option&#123; self = [super init]; if (self) &#123; _option = option; &#125; return self;&#125;- (void)start&#123;&#125;@end 第三步经过第二步之后，初步的爬虫工具就可以使用了，下面我们在ViewController.m里面调用我们的爬虫工具。 ViewController.m 123456789101112131415161718192021222324252627282930313233343536373839404142#import "ViewController.h"#import "Spider.h"@interface ViewController ()@property (weak, nonatomic) IBOutlet UITextView *textView;@property (strong, nonatomic) Spider *spider;@end@implementation ViewController- (void)viewDidLoad &#123; [super viewDidLoad]; //初始化一个参数类 SpiderOption* option = [[SpiderOption alloc] init]; //准备目标网址 option.website = @"https://www.enterdesk.com"; //处理回调，当成功抓取一个内容之后，我们就把他拼接到textView的底部 option.progress = ^(NSString *url) &#123; [self showLogs:url]; &#125;; //初始化爬虫类 self.spider = [[Spider alloc] initWithOption:option]; //开始抓取 [self.spider start];&#125;- (void)showLogs:(NSString*)log&#123; //把Log内容拼接到textView最下面，并且滚动到最下面 if (log.length &gt; 0) &#123; [self.textView insertText:[NSString stringWithFormat:@"%@\n\n",log]]; [self.textView scrollRangeToVisible:NSMakeRange(self.textView.text.length, 0)]; &#125;&#125;@end 现在来运行一下我们的项目，不会报错，但是并没有开始爬什么数据，接下让我们来完善我们的Spider工具类。 第四步 在我们的Spider.m里面添加一个方法，来获取网页的HTML源码： 1234567891011121314151617- (void)htmlWithURLString:(NSString*)urlString&#123; WeakSelf; NSURL* url = [NSURL URLWithString:urlString]; NSURLSessionConfiguration* configuration = [NSURLSessionConfiguration defaultSessionConfiguration]; NSURLSession* session = [NSURLSession sessionWithConfiguration:configuration]; NSURLSessionDataTask* task = [session dataTaskWithURL:url completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) &#123; if (!error) &#123; NSString* html = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding]; NSLog(@"%@",html); &#125; &#125;]; [task resume];&#125; 接下来在我们的start方法调用上述方法: 123- (void)start&#123; [self htmlWithURLString:self.option.website];&#125; 让我们在运行一次项目，如果网络没有问题的话，我们就能看到控制器上面输出的HTML源码,尽管我们的textView还是黑黑的一片。如下图: 接下来就开始我们的最后一步: 正则匹配我们再次给Spider.m添加一个方法,这个方法主要就是从HTML里面提取出我们想要的内容，比如我们的图片,然后回调给控制器: 12345678910111213141516- (void)matchesStringInHtml:(NSString*)html&#123; WeakSelf; NSRegularExpression* expression = [NSRegularExpression regularExpressionWithPattern:self.option.pattern options:NSRegularExpressionCaseInsensitive error:nil]; [expression enumerateMatchesInString:html options:NSMatchingReportCompletion range:NSMakeRange(0, html.length) usingBlock:^(NSTextCheckingResult* result, NSMatchingFlags flags, BOOL* stop) &#123; dispatch_async(dispatch_get_main_queue(), ^&#123; NSString* sub = [html substringWithRange:result.range]; weakSelf.option.progress ? weakSelf.option.progress(sub) : nil; &#125;); &#125;];&#125; 我们还需要给SpiderOption的pattern赋值，那我们在ViewController.m里面添加以下正则即可： 12345... option.website = @"https://www.enterdesk.com"; option.pattern = @"https?://.+?.(jpg|png)"; ... 最后，让我们运行以下看效果吧！！！ – 我们来解释一下https?://.+?.(jpg|png)表达式的含义: HTML中的图片地址可能类似于http://aaa.jpg、又或者是以https开头的https://aaa.jpg,那我们就用https?://aaa.jpg即可匹配http也可匹配https。?在这里表示前一个字符s有0个或者1个。 或许网页中的图片不仅仅是.jpg又或者是.png、.gif等等，我们用或|提取我们想要的格式图片。比如.(jpg|png)就是我们想取jpg或者是png的图片,如果你也想提取.gif的图片，可以这样写.(jpg|png|gif)即可。 我们再说说中间的.+?,.代表单个字符，比如正则表达式这样写http://..jpg我们只能提取http://a.jpg这中间只有单个字符的url。那如果我们想提取中间个数不确定的呢？比如http://abc.jpg?我们就在.后面加个+即可；+表示大于等于1个，比如http://.+.jpg我们既可以匹配到http://a.jpg也可匹配到http://aaa.jpg等中间多个字符的url。 那么后面的?呢,这里的?多代表的是非贪婪匹配，举个例子:http://aa.jpg.jpg像这种url我们该怎么提取呢，如果按照刚才http://.+.jpg的表达式匹配出来的是http://aa.jpg.jpg整个串，但是我们只想提取到http://aa.jpg怎么办，我们就在+后面加个?代表尽可能少的匹配，就是所谓的非贪婪匹配。]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <url>%2F2018%2F03%2F09%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[春江花月夜 【作者】张若虚 【朝代】唐 译文对照 春江潮水连海平，海上明月共潮生。滟滟随波千万里，何处春江无月明！ 江流宛转绕芳甸，月照花林皆似霰；空里流霜不觉飞，汀上白沙看不见。 江天一色无纤尘，皎皎空中孤月轮。江畔何人初见月？江月何年初照人？ 人生代代无穷已，江月年年只相似。不知江月待何人，但见长江送流水。 白云一片去悠悠，青枫浦上不胜愁。谁家今夜扁舟子？何处相思明月楼？ 可怜楼上月徘徊，应照离人妆镜台。玉户帘中卷不去，捣衣砧上拂还来。 此时相望不相闻，愿逐月华流照君。鸿雁长飞光不度，鱼龙潜跃水成文。 昨夜闲潭梦落花，可怜春半不还家。江水流春去欲尽，江潭落月复西斜。 斜月沉沉藏海雾，碣石潇湘无限路。不知乘月几人归，落月摇情满江树。 12345@interface Dog- (void)viewDidLoad()&#123; NSLog(@"Hello world");&#125;@end 12345class Dog&#123; public static void main(String[] args)&#123; System.out.println("Hello world"); &#125;&#125; 仅此纪念部署的第一个博客， 特别感谢:Devin_ tag { color:#999999 } author { font-size:14px }]]></content>
  </entry>
</search>
